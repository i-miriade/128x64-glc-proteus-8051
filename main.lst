                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  3 2018) (Linux)
                                      4 ; This file was generated Wed May  1 06:23:07 2019
                                      5 ;--------------------------------------------------------
                                      6 	.module main
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fonte
                                     13 	.globl _main
                                     14 	.globl _escreveEspaco
                                     15 	.globl _limp_glcd
                                     16 	.globl _conf_pag
                                     17 	.globl _conf_y
                                     18 	.globl _Init_LCGD
                                     19 	.globl _esc_glcd
                                     20 	.globl _le_glcd
                                     21 	.globl _delay_us_2
                                     22 	.globl _delay_ms_
                                     23 	.globl _delay_sec
                                     24 	.globl _delay_ms
                                     25 	.globl _delay_us
                                     26 	.globl _printf_fast_f
                                     27 	.globl _CY
                                     28 	.globl _AC
                                     29 	.globl _F0
                                     30 	.globl _RS1
                                     31 	.globl _RS0
                                     32 	.globl _OV
                                     33 	.globl _F1
                                     34 	.globl _P
                                     35 	.globl _PS
                                     36 	.globl _PT1
                                     37 	.globl _PX1
                                     38 	.globl _PT0
                                     39 	.globl _PX0
                                     40 	.globl _RD
                                     41 	.globl _WR
                                     42 	.globl _T1
                                     43 	.globl _T0
                                     44 	.globl _INT1
                                     45 	.globl _INT0
                                     46 	.globl _TXD
                                     47 	.globl _RXD
                                     48 	.globl _P3_7
                                     49 	.globl _P3_6
                                     50 	.globl _P3_5
                                     51 	.globl _P3_4
                                     52 	.globl _P3_3
                                     53 	.globl _P3_2
                                     54 	.globl _P3_1
                                     55 	.globl _P3_0
                                     56 	.globl _EA
                                     57 	.globl _ES
                                     58 	.globl _ET1
                                     59 	.globl _EX1
                                     60 	.globl _ET0
                                     61 	.globl _EX0
                                     62 	.globl _P2_7
                                     63 	.globl _P2_6
                                     64 	.globl _P2_5
                                     65 	.globl _P2_4
                                     66 	.globl _P2_3
                                     67 	.globl _P2_2
                                     68 	.globl _P2_1
                                     69 	.globl _P2_0
                                     70 	.globl _SM0
                                     71 	.globl _SM1
                                     72 	.globl _SM2
                                     73 	.globl _REN
                                     74 	.globl _TB8
                                     75 	.globl _RB8
                                     76 	.globl _TI
                                     77 	.globl _RI
                                     78 	.globl _P1_7
                                     79 	.globl _P1_6
                                     80 	.globl _P1_5
                                     81 	.globl _P1_4
                                     82 	.globl _P1_3
                                     83 	.globl _P1_2
                                     84 	.globl _P1_1
                                     85 	.globl _P1_0
                                     86 	.globl _TF1
                                     87 	.globl _TR1
                                     88 	.globl _TF0
                                     89 	.globl _TR0
                                     90 	.globl _IE1
                                     91 	.globl _IT1
                                     92 	.globl _IE0
                                     93 	.globl _IT0
                                     94 	.globl _P0_7
                                     95 	.globl _P0_6
                                     96 	.globl _P0_5
                                     97 	.globl _P0_4
                                     98 	.globl _P0_3
                                     99 	.globl _P0_2
                                    100 	.globl _P0_1
                                    101 	.globl _P0_0
                                    102 	.globl _B
                                    103 	.globl _ACC
                                    104 	.globl _PSW
                                    105 	.globl _IP
                                    106 	.globl _P3
                                    107 	.globl _IE
                                    108 	.globl _P2
                                    109 	.globl _SBUF
                                    110 	.globl _SCON
                                    111 	.globl _P1
                                    112 	.globl _TH1
                                    113 	.globl _TH0
                                    114 	.globl _TL1
                                    115 	.globl _TL0
                                    116 	.globl _TMOD
                                    117 	.globl _TCON
                                    118 	.globl _PCON
                                    119 	.globl _DPH
                                    120 	.globl _DPL
                                    121 	.globl _SP
                                    122 	.globl _P0
                                    123 	.globl _escreveEspaco_PARM_1
                                    124 	.globl _limp_glcd_PARM_1
                                    125 	.globl _conf_pag_PARM_2
                                    126 	.globl _conf_y_PARM_2
                                    127 	.globl _esc_glcd_PARM_3
                                    128 	.globl _esc_glcd_PARM_2
                                    129 	.globl _le_glcd_PARM_2
                                    130 	.globl _le_glcd_PARM_1
                                    131 	.globl _POS
                                    132 	.globl _contador
                                    133 	.globl _putchar
                                    134 ;--------------------------------------------------------
                                    135 ; special function registers
                                    136 ;--------------------------------------------------------
                                    137 	.area RSEG    (ABS,DATA)
      000000                        138 	.org 0x0000
                           000080   139 _P0	=	0x0080
                           000081   140 _SP	=	0x0081
                           000082   141 _DPL	=	0x0082
                           000083   142 _DPH	=	0x0083
                           000087   143 _PCON	=	0x0087
                           000088   144 _TCON	=	0x0088
                           000089   145 _TMOD	=	0x0089
                           00008A   146 _TL0	=	0x008a
                           00008B   147 _TL1	=	0x008b
                           00008C   148 _TH0	=	0x008c
                           00008D   149 _TH1	=	0x008d
                           000090   150 _P1	=	0x0090
                           000098   151 _SCON	=	0x0098
                           000099   152 _SBUF	=	0x0099
                           0000A0   153 _P2	=	0x00a0
                           0000A8   154 _IE	=	0x00a8
                           0000B0   155 _P3	=	0x00b0
                           0000B8   156 _IP	=	0x00b8
                           0000D0   157 _PSW	=	0x00d0
                           0000E0   158 _ACC	=	0x00e0
                           0000F0   159 _B	=	0x00f0
                                    160 ;--------------------------------------------------------
                                    161 ; special function bits
                                    162 ;--------------------------------------------------------
                                    163 	.area RSEG    (ABS,DATA)
      000000                        164 	.org 0x0000
                           000080   165 _P0_0	=	0x0080
                           000081   166 _P0_1	=	0x0081
                           000082   167 _P0_2	=	0x0082
                           000083   168 _P0_3	=	0x0083
                           000084   169 _P0_4	=	0x0084
                           000085   170 _P0_5	=	0x0085
                           000086   171 _P0_6	=	0x0086
                           000087   172 _P0_7	=	0x0087
                           000088   173 _IT0	=	0x0088
                           000089   174 _IE0	=	0x0089
                           00008A   175 _IT1	=	0x008a
                           00008B   176 _IE1	=	0x008b
                           00008C   177 _TR0	=	0x008c
                           00008D   178 _TF0	=	0x008d
                           00008E   179 _TR1	=	0x008e
                           00008F   180 _TF1	=	0x008f
                           000090   181 _P1_0	=	0x0090
                           000091   182 _P1_1	=	0x0091
                           000092   183 _P1_2	=	0x0092
                           000093   184 _P1_3	=	0x0093
                           000094   185 _P1_4	=	0x0094
                           000095   186 _P1_5	=	0x0095
                           000096   187 _P1_6	=	0x0096
                           000097   188 _P1_7	=	0x0097
                           000098   189 _RI	=	0x0098
                           000099   190 _TI	=	0x0099
                           00009A   191 _RB8	=	0x009a
                           00009B   192 _TB8	=	0x009b
                           00009C   193 _REN	=	0x009c
                           00009D   194 _SM2	=	0x009d
                           00009E   195 _SM1	=	0x009e
                           00009F   196 _SM0	=	0x009f
                           0000A0   197 _P2_0	=	0x00a0
                           0000A1   198 _P2_1	=	0x00a1
                           0000A2   199 _P2_2	=	0x00a2
                           0000A3   200 _P2_3	=	0x00a3
                           0000A4   201 _P2_4	=	0x00a4
                           0000A5   202 _P2_5	=	0x00a5
                           0000A6   203 _P2_6	=	0x00a6
                           0000A7   204 _P2_7	=	0x00a7
                           0000A8   205 _EX0	=	0x00a8
                           0000A9   206 _ET0	=	0x00a9
                           0000AA   207 _EX1	=	0x00aa
                           0000AB   208 _ET1	=	0x00ab
                           0000AC   209 _ES	=	0x00ac
                           0000AF   210 _EA	=	0x00af
                           0000B0   211 _P3_0	=	0x00b0
                           0000B1   212 _P3_1	=	0x00b1
                           0000B2   213 _P3_2	=	0x00b2
                           0000B3   214 _P3_3	=	0x00b3
                           0000B4   215 _P3_4	=	0x00b4
                           0000B5   216 _P3_5	=	0x00b5
                           0000B6   217 _P3_6	=	0x00b6
                           0000B7   218 _P3_7	=	0x00b7
                           0000B0   219 _RXD	=	0x00b0
                           0000B1   220 _TXD	=	0x00b1
                           0000B2   221 _INT0	=	0x00b2
                           0000B3   222 _INT1	=	0x00b3
                           0000B4   223 _T0	=	0x00b4
                           0000B5   224 _T1	=	0x00b5
                           0000B6   225 _WR	=	0x00b6
                           0000B7   226 _RD	=	0x00b7
                           0000B8   227 _PX0	=	0x00b8
                           0000B9   228 _PT0	=	0x00b9
                           0000BA   229 _PX1	=	0x00ba
                           0000BB   230 _PT1	=	0x00bb
                           0000BC   231 _PS	=	0x00bc
                           0000D0   232 _P	=	0x00d0
                           0000D1   233 _F1	=	0x00d1
                           0000D2   234 _OV	=	0x00d2
                           0000D3   235 _RS0	=	0x00d3
                           0000D4   236 _RS1	=	0x00d4
                           0000D5   237 _F0	=	0x00d5
                           0000D6   238 _AC	=	0x00d6
                           0000D7   239 _CY	=	0x00d7
                                    240 ;--------------------------------------------------------
                                    241 ; overlayable register banks
                                    242 ;--------------------------------------------------------
                                    243 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        244 	.ds 8
                                    245 ;--------------------------------------------------------
                                    246 ; internal ram data
                                    247 ;--------------------------------------------------------
                                    248 	.area DSEG    (DATA)
      000000                        249 _contador::
      000000                        250 	.ds 1
      000001                        251 _POS::
      000001                        252 	.ds 1
                                    253 ;--------------------------------------------------------
                                    254 ; overlayable items in internal ram 
                                    255 ;--------------------------------------------------------
                                    256 	.area	OSEG    (OVR,DATA)
                                    257 	.area	OSEG    (OVR,DATA)
                                    258 	.area	OSEG    (OVR,DATA)
                                    259 	.area	OSEG    (OVR,DATA)
                                    260 ;--------------------------------------------------------
                                    261 ; Stack segment in internal ram 
                                    262 ;--------------------------------------------------------
                                    263 	.area	SSEG
      000000                        264 __start__stack:
      000000                        265 	.ds	1
                                    266 
                                    267 ;--------------------------------------------------------
                                    268 ; indirectly addressable internal ram data
                                    269 ;--------------------------------------------------------
                                    270 	.area ISEG    (DATA)
                                    271 ;--------------------------------------------------------
                                    272 ; absolute internal ram data
                                    273 ;--------------------------------------------------------
                                    274 	.area IABS    (ABS,DATA)
                                    275 	.area IABS    (ABS,DATA)
                                    276 ;--------------------------------------------------------
                                    277 ; bit data
                                    278 ;--------------------------------------------------------
                                    279 	.area BSEG    (BIT)
      000000                        280 _le_glcd_PARM_1:
      000000                        281 	.ds 1
      000001                        282 _le_glcd_PARM_2:
      000001                        283 	.ds 1
      000002                        284 _esc_glcd_PARM_2:
      000002                        285 	.ds 1
      000003                        286 _esc_glcd_PARM_3:
      000003                        287 	.ds 1
      000004                        288 _conf_y_PARM_2:
      000004                        289 	.ds 1
      000005                        290 _conf_pag_PARM_2:
      000005                        291 	.ds 1
      000006                        292 _limp_glcd_PARM_1:
      000006                        293 	.ds 1
      000007                        294 _escreveEspaco_PARM_1:
      000007                        295 	.ds 1
                                    296 ;--------------------------------------------------------
                                    297 ; paged external ram data
                                    298 ;--------------------------------------------------------
                                    299 	.area PSEG    (PAG,XDATA)
                                    300 ;--------------------------------------------------------
                                    301 ; external ram data
                                    302 ;--------------------------------------------------------
                                    303 	.area XSEG    (XDATA)
                                    304 ;--------------------------------------------------------
                                    305 ; absolute external ram data
                                    306 ;--------------------------------------------------------
                                    307 	.area XABS    (ABS,XDATA)
                                    308 ;--------------------------------------------------------
                                    309 ; external initialized ram data
                                    310 ;--------------------------------------------------------
                                    311 	.area XISEG   (XDATA)
                                    312 	.area HOME    (CODE)
                                    313 	.area GSINIT0 (CODE)
                                    314 	.area GSINIT1 (CODE)
                                    315 	.area GSINIT2 (CODE)
                                    316 	.area GSINIT3 (CODE)
                                    317 	.area GSINIT4 (CODE)
                                    318 	.area GSINIT5 (CODE)
                                    319 	.area GSINIT  (CODE)
                                    320 	.area GSFINAL (CODE)
                                    321 	.area CSEG    (CODE)
                                    322 ;--------------------------------------------------------
                                    323 ; interrupt vector 
                                    324 ;--------------------------------------------------------
                                    325 	.area HOME    (CODE)
      000000                        326 __interrupt_vect:
      000000 02r00r00         [24]  327 	ljmp	__sdcc_gsinit_startup
                                    328 ;--------------------------------------------------------
                                    329 ; global & static initialisations
                                    330 ;--------------------------------------------------------
                                    331 	.area HOME    (CODE)
                                    332 	.area GSINIT  (CODE)
                                    333 	.area GSFINAL (CODE)
                                    334 	.area GSINIT  (CODE)
                                    335 	.globl __sdcc_gsinit_startup
                                    336 	.globl __sdcc_program_startup
                                    337 	.globl __start__stack
                                    338 	.globl __mcs51_genXINIT
                                    339 	.globl __mcs51_genXRAMCLEAR
                                    340 	.globl __mcs51_genRAMCLEAR
                                    341 ;	main.c:26: char contador = 0;
      000000 75*00 00         [24]  342 	mov	_contador,#0x00
                                    343 ;	main.c:27: char POS = 0;
      000003 75*01 00         [24]  344 	mov	_POS,#0x00
                                    345 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  346 	ljmp	__sdcc_program_startup
                                    347 ;--------------------------------------------------------
                                    348 ; Home
                                    349 ;--------------------------------------------------------
                                    350 	.area HOME    (CODE)
                                    351 	.area HOME    (CODE)
      000003                        352 __sdcc_program_startup:
      000003 02r02rDD         [24]  353 	ljmp	_main
                                    354 ;	return from main will return to caller
                                    355 ;--------------------------------------------------------
                                    356 ; code
                                    357 ;--------------------------------------------------------
                                    358 	.area CSEG    (CODE)
                                    359 ;------------------------------------------------------------
                                    360 ;Allocation info for local variables in function 'delay_us'
                                    361 ;------------------------------------------------------------
                                    362 ;us_count                  Allocated to registers 
                                    363 ;------------------------------------------------------------
                                    364 ;	delay.c:27: void delay_us(unsigned int us_count)
                                    365 ;	-----------------------------------------
                                    366 ;	 function delay_us
                                    367 ;	-----------------------------------------
      000000                        368 _delay_us:
                           000007   369 	ar7 = 0x07
                           000006   370 	ar6 = 0x06
                           000005   371 	ar5 = 0x05
                           000004   372 	ar4 = 0x04
                           000003   373 	ar3 = 0x03
                           000002   374 	ar2 = 0x02
                           000001   375 	ar1 = 0x01
                           000000   376 	ar0 = 0x00
      000000 AE 82            [24]  377 	mov	r6,dpl
      000002 AF 83            [24]  378 	mov	r7,dph
                                    379 ;	delay.c:29: while(us_count!=0)
      000004                        380 00101$:
      000004 EE               [12]  381 	mov	a,r6
      000005 4F               [12]  382 	orl	a,r7
      000006 60 07            [24]  383 	jz	00104$
                                    384 ;	delay.c:31: us_count--;
      000008 1E               [12]  385 	dec	r6
      000009 BE FF 01         [24]  386 	cjne	r6,#0xFF,00114$
      00000C 1F               [12]  387 	dec	r7
      00000D                        388 00114$:
      00000D 80 F5            [24]  389 	sjmp	00101$
      00000F                        390 00104$:
      00000F 22               [24]  391 	ret
                                    392 ;------------------------------------------------------------
                                    393 ;Allocation info for local variables in function 'delay_ms'
                                    394 ;------------------------------------------------------------
                                    395 ;ms_count                  Allocated to registers 
                                    396 ;------------------------------------------------------------
                                    397 ;	delay.c:49: void delay_ms(unsigned int ms_count)
                                    398 ;	-----------------------------------------
                                    399 ;	 function delay_ms
                                    400 ;	-----------------------------------------
      000010                        401 _delay_ms:
      000010 AE 82            [24]  402 	mov	r6,dpl
      000012 AF 83            [24]  403 	mov	r7,dph
                                    404 ;	delay.c:51: while(ms_count!=0)
      000014                        405 00101$:
      000014 EE               [12]  406 	mov	a,r6
      000015 4F               [12]  407 	orl	a,r7
      000016 60 15            [24]  408 	jz	00104$
                                    409 ;	delay.c:53: delay_us(112);   //delay_us is called to generate 1ms delay
      000018 90 00 70         [24]  410 	mov	dptr,#0x0070
      00001B C0 07            [24]  411 	push	ar7
      00001D C0 06            [24]  412 	push	ar6
      00001F 12r00r00         [24]  413 	lcall	_delay_us
      000022 D0 06            [24]  414 	pop	ar6
      000024 D0 07            [24]  415 	pop	ar7
                                    416 ;	delay.c:54: ms_count--;
      000026 1E               [12]  417 	dec	r6
      000027 BE FF 01         [24]  418 	cjne	r6,#0xFF,00114$
      00002A 1F               [12]  419 	dec	r7
      00002B                        420 00114$:
      00002B 80 E7            [24]  421 	sjmp	00101$
      00002D                        422 00104$:
      00002D 22               [24]  423 	ret
                                    424 ;------------------------------------------------------------
                                    425 ;Allocation info for local variables in function 'delay_sec'
                                    426 ;------------------------------------------------------------
                                    427 ;sec_count                 Allocated to registers 
                                    428 ;------------------------------------------------------------
                                    429 ;	delay.c:77: void delay_sec(unsigned char sec_count)
                                    430 ;	-----------------------------------------
                                    431 ;	 function delay_sec
                                    432 ;	-----------------------------------------
      00002E                        433 _delay_sec:
      00002E AF 82            [24]  434 	mov	r7,dpl
                                    435 ;	delay.c:81: while(sec_count!=0)
      000030                        436 00101$:
      000030 EF               [12]  437 	mov	a,r7
      000031 60 0D            [24]  438 	jz	00104$
                                    439 ;	delay.c:83: delay_ms(1000);    //delay_ms is called to generate 1sec delay
      000033 90 03 E8         [24]  440 	mov	dptr,#0x03E8
      000036 C0 07            [24]  441 	push	ar7
      000038 12r00r10         [24]  442 	lcall	_delay_ms
      00003B D0 07            [24]  443 	pop	ar7
                                    444 ;	delay.c:84: sec_count--;
      00003D 1F               [12]  445 	dec	r7
      00003E 80 F0            [24]  446 	sjmp	00101$
      000040                        447 00104$:
      000040 22               [24]  448 	ret
                                    449 ;------------------------------------------------------------
                                    450 ;Allocation info for local variables in function 'delay_ms_'
                                    451 ;------------------------------------------------------------
                                    452 ;t                         Allocated to registers r6 r7 
                                    453 ;------------------------------------------------------------
                                    454 ;	main.c:43: void delay_ms_(unsigned int t)
                                    455 ;	-----------------------------------------
                                    456 ;	 function delay_ms_
                                    457 ;	-----------------------------------------
      000041                        458 _delay_ms_:
      000041 AE 82            [24]  459 	mov	r6,dpl
      000043 AF 83            [24]  460 	mov	r7,dph
                                    461 ;	main.c:45: TMOD |= 0x01;
      000045 43 89 01         [24]  462 	orl	_TMOD,#0x01
                                    463 ;	main.c:46: TMOD &= ~0x02;
      000048 AD 89            [24]  464 	mov	r5,_TMOD
      00004A 74 FD            [12]  465 	mov	a,#0xFD
      00004C 5D               [12]  466 	anl	a,r5
      00004D F5 89            [12]  467 	mov	_TMOD,a
                                    468 ;	main.c:47: while(t>0)
      00004F                        469 00104$:
      00004F EE               [12]  470 	mov	a,r6
      000050 4F               [12]  471 	orl	a,r7
      000051 60 16            [24]  472 	jz	00107$
                                    473 ;	main.c:49: TR0 = 0;
      000053 C2 8C            [12]  474 	clr	_TR0
                                    475 ;	main.c:50: TF0 = 0;
      000055 C2 8D            [12]  476 	clr	_TF0
                                    477 ;	main.c:51: TH0 = 0x9E;
      000057 75 8C 9E         [24]  478 	mov	_TH0,#0x9E
                                    479 ;	main.c:52: TL0 = 0x58;
      00005A 75 8A 58         [24]  480 	mov	_TL0,#0x58
                                    481 ;	main.c:53: TR0 = 1;
      00005D D2 8C            [12]  482 	setb	_TR0
                                    483 ;	main.c:54: while(TF0 != 1);
      00005F                        484 00101$:
      00005F 30 8D FD         [24]  485 	jnb	_TF0,00101$
                                    486 ;	main.c:55: t--;
      000062 1E               [12]  487 	dec	r6
      000063 BE FF 01         [24]  488 	cjne	r6,#0xFF,00124$
      000066 1F               [12]  489 	dec	r7
      000067                        490 00124$:
      000067 80 E6            [24]  491 	sjmp	00104$
      000069                        492 00107$:
      000069 22               [24]  493 	ret
                                    494 ;------------------------------------------------------------
                                    495 ;Allocation info for local variables in function 'delay_us_2'
                                    496 ;------------------------------------------------------------
                                    497 ;t                         Allocated to registers r6 r7 
                                    498 ;------------------------------------------------------------
                                    499 ;	main.c:60: void delay_us_2(unsigned int t){
                                    500 ;	-----------------------------------------
                                    501 ;	 function delay_us_2
                                    502 ;	-----------------------------------------
      00006A                        503 _delay_us_2:
      00006A AE 82            [24]  504 	mov	r6,dpl
      00006C AF 83            [24]  505 	mov	r7,dph
                                    506 ;	main.c:61: TMOD &= ~0x01;
      00006E AD 89            [24]  507 	mov	r5,_TMOD
      000070 74 FE            [12]  508 	mov	a,#0xFE
      000072 5D               [12]  509 	anl	a,r5
      000073 F5 89            [12]  510 	mov	_TMOD,a
                                    511 ;	main.c:62: TMOD |= 0x02;
      000075 43 89 02         [24]  512 	orl	_TMOD,#0x02
                                    513 ;	main.c:64: TR0 = 0;
      000078 C2 8C            [12]  514 	clr	_TR0
                                    515 ;	main.c:65: TF0 = 0;
      00007A C2 8D            [12]  516 	clr	_TF0
                                    517 ;	main.c:66: TL0 = 0xE7;
      00007C 75 8A E7         [24]  518 	mov	_TL0,#0xE7
                                    519 ;	main.c:67: TH0 = 0XE7;
      00007F 75 8C E7         [24]  520 	mov	_TH0,#0xE7
                                    521 ;	main.c:68: TR0 = 1;
      000082 D2 8C            [12]  522 	setb	_TR0
      000084                        523 00106$:
                                    524 ;	main.c:70: for(;t>0;t--){
      000084 EE               [12]  525 	mov	a,r6
      000085 4F               [12]  526 	orl	a,r7
      000086 60 0C            [24]  527 	jz	00108$
                                    528 ;	main.c:71: while(TF0==0);
      000088                        529 00101$:
                                    530 ;	main.c:72: TF0 = 0;
      000088 10 8D 02         [24]  531 	jbc	_TF0,00124$
      00008B 80 FB            [24]  532 	sjmp	00101$
      00008D                        533 00124$:
                                    534 ;	main.c:70: for(;t>0;t--){
      00008D 1E               [12]  535 	dec	r6
      00008E BE FF 01         [24]  536 	cjne	r6,#0xFF,00125$
      000091 1F               [12]  537 	dec	r7
      000092                        538 00125$:
      000092 80 F0            [24]  539 	sjmp	00106$
      000094                        540 00108$:
      000094 22               [24]  541 	ret
                                    542 ;------------------------------------------------------------
                                    543 ;Allocation info for local variables in function 'le_glcd'
                                    544 ;------------------------------------------------------------
                                    545 ;byte                      Allocated to registers 
                                    546 ;------------------------------------------------------------
                                    547 ;	main.c:77: unsigned char le_glcd(__bit cd, __bit cs){
                                    548 ;	-----------------------------------------
                                    549 ;	 function le_glcd
                                    550 ;	-----------------------------------------
      000095                        551 _le_glcd:
                                    552 ;	main.c:81: RW = 1;
      000095 D2 A3            [12]  553 	setb	_P2_3
                                    554 ;	main.c:82: CS1 = cs;
      000097 A2*01            [12]  555 	mov	c,_le_glcd_PARM_2
      000099 92 A0            [24]  556 	mov	_P2_0,c
                                    557 ;	main.c:83: CS2 = !cs;
      00009B A2*01            [12]  558 	mov	c,_le_glcd_PARM_2
      00009D B3               [12]  559 	cpl	c
      00009E 92 A1            [24]  560 	mov	_P2_1,c
                                    561 ;	main.c:84: RS = cd;
      0000A0 A2*00            [12]  562 	mov	c,_le_glcd_PARM_1
      0000A2 92 A2            [24]  563 	mov	_P2_2,c
                                    564 ;	main.c:86: NOP4();
      0000A4 00               [12]  565 	nop 
      0000A5 00               [12]  566 	nop 
      0000A6 00               [12]  567 	nop 
      0000A7 00               [12]  568 	nop 
                                    569 ;	main.c:88: E = 1;
      0000A8 D2 A4            [12]  570 	setb	_P2_4
                                    571 ;	main.c:90: NOP8();
      0000AA 00               [12]  572 	nop 
      0000AB 00               [12]  573 	nop 
      0000AC 00               [12]  574 	nop 
      0000AD 00               [12]  575 	nop 
      0000AE 00               [12]  576 	nop 
      0000AF 00               [12]  577 	nop 
      0000B0 00               [12]  578 	nop 
      0000B1 00               [12]  579 	nop 
                                    580 ;	main.c:93: byte = DB;
      0000B2 85 B0 82         [24]  581 	mov	dpl,_P3
                                    582 ;	main.c:96: NOP4();
      0000B5 00               [12]  583 	nop 
      0000B6 00               [12]  584 	nop 
      0000B7 00               [12]  585 	nop 
      0000B8 00               [12]  586 	nop 
                                    587 ;	main.c:98: E = 0;
      0000B9 C2 A4            [12]  588 	clr	_P2_4
                                    589 ;	main.c:100: NOP12();
      0000BB 00               [12]  590 	nop 
      0000BC 00               [12]  591 	nop 
      0000BD 00               [12]  592 	nop 
      0000BE 00               [12]  593 	nop 
      0000BF 00               [12]  594 	nop 
      0000C0 00               [12]  595 	nop 
      0000C1 00               [12]  596 	nop 
      0000C2 00               [12]  597 	nop 
      0000C3 00               [12]  598 	nop 
      0000C4 00               [12]  599 	nop 
      0000C5 00               [12]  600 	nop 
      0000C6 00               [12]  601 	nop 
                                    602 ;	main.c:102: return byte;
      0000C7 22               [24]  603 	ret
                                    604 ;------------------------------------------------------------
                                    605 ;Allocation info for local variables in function 'esc_glcd'
                                    606 ;------------------------------------------------------------
                                    607 ;byte                      Allocated to registers r7 
                                    608 ;------------------------------------------------------------
                                    609 ;	main.c:107: void esc_glcd(unsigned char byte,__bit cd,__bit cs){
                                    610 ;	-----------------------------------------
                                    611 ;	 function esc_glcd
                                    612 ;	-----------------------------------------
      0000C8                        613 _esc_glcd:
      0000C8 AF 82            [24]  614 	mov	r7,dpl
                                    615 ;	main.c:109: while(le_glcd(CMD, cs) & 0x80);
      0000CA                        616 00101$:
      0000CA C2*00            [12]  617 	clr	_le_glcd_PARM_1
      0000CC A2*03            [12]  618 	mov	c,_esc_glcd_PARM_3
      0000CE 92*01            [24]  619 	mov	_le_glcd_PARM_2,c
      0000D0 C0 07            [24]  620 	push	ar7
      0000D2 12r00r95         [24]  621 	lcall	_le_glcd
      0000D5 E5 82            [12]  622 	mov	a,dpl
      0000D7 D0 07            [24]  623 	pop	ar7
      0000D9 20 E7 EE         [24]  624 	jb	acc.7,00101$
                                    625 ;	main.c:111: RW = 0;
      0000DC C2 A3            [12]  626 	clr	_P2_3
                                    627 ;	main.c:112: CS1 = cs;
      0000DE A2*03            [12]  628 	mov	c,_esc_glcd_PARM_3
      0000E0 92 A0            [24]  629 	mov	_P2_0,c
                                    630 ;	main.c:113: CS2 = !cs;
      0000E2 A2*03            [12]  631 	mov	c,_esc_glcd_PARM_3
      0000E4 B3               [12]  632 	cpl	c
      0000E5 92 A1            [24]  633 	mov	_P2_1,c
                                    634 ;	main.c:114: RS = cd;
      0000E7 A2*02            [12]  635 	mov	c,_esc_glcd_PARM_2
      0000E9 92 A2            [24]  636 	mov	_P2_2,c
                                    637 ;	main.c:117: DB = byte;
      0000EB 8F B0            [24]  638 	mov	_P3,r7
                                    639 ;	main.c:120: NOP4();
      0000ED 00               [12]  640 	nop 
      0000EE 00               [12]  641 	nop 
      0000EF 00               [12]  642 	nop 
      0000F0 00               [12]  643 	nop 
                                    644 ;	main.c:122: E = 1;
      0000F1 D2 A4            [12]  645 	setb	_P2_4
                                    646 ;	main.c:123: NOP12();
      0000F3 00               [12]  647 	nop 
      0000F4 00               [12]  648 	nop 
      0000F5 00               [12]  649 	nop 
      0000F6 00               [12]  650 	nop 
      0000F7 00               [12]  651 	nop 
      0000F8 00               [12]  652 	nop 
      0000F9 00               [12]  653 	nop 
      0000FA 00               [12]  654 	nop 
      0000FB 00               [12]  655 	nop 
      0000FC 00               [12]  656 	nop 
      0000FD 00               [12]  657 	nop 
      0000FE 00               [12]  658 	nop 
                                    659 ;	main.c:124: E = 0;
      0000FF C2 A4            [12]  660 	clr	_P2_4
                                    661 ;	main.c:127: DB = 0xFF;
      000101 75 B0 FF         [24]  662 	mov	_P3,#0xFF
                                    663 ;	main.c:130: NOP12();
      000104 00               [12]  664 	nop 
      000105 00               [12]  665 	nop 
      000106 00               [12]  666 	nop 
      000107 00               [12]  667 	nop 
      000108 00               [12]  668 	nop 
      000109 00               [12]  669 	nop 
      00010A 00               [12]  670 	nop 
      00010B 00               [12]  671 	nop 
      00010C 00               [12]  672 	nop 
      00010D 00               [12]  673 	nop 
      00010E 00               [12]  674 	nop 
      00010F 00               [12]  675 	nop 
      000110 22               [24]  676 	ret
                                    677 ;------------------------------------------------------------
                                    678 ;Allocation info for local variables in function 'Init_LCGD'
                                    679 ;------------------------------------------------------------
                                    680 ;	main.c:135: void Init_LCGD(){
                                    681 ;	-----------------------------------------
                                    682 ;	 function Init_LCGD
                                    683 ;	-----------------------------------------
      000111                        684 _Init_LCGD:
                                    685 ;	main.c:137: E 	= 0;
      000111 C2 A4            [12]  686 	clr	_P2_4
                                    687 ;	main.c:138: RST = 1;
      000113 D2 A5            [12]  688 	setb	_P2_5
                                    689 ;	main.c:139: CS1 = 1;
      000115 D2 A0            [12]  690 	setb	_P2_0
                                    691 ;	main.c:140: CS2 = 1;
      000117 D2 A1            [12]  692 	setb	_P2_1
                                    693 ;	main.c:143: DB = 0xFF;
      000119 75 B0 FF         [24]  694 	mov	_P3,#0xFF
                                    695 ;	main.c:148: while(le_glcd(CMD, ESQ) & 0x10); 
      00011C                        696 00101$:
      00011C C2*00            [12]  697 	clr	_le_glcd_PARM_1
      00011E C2*01            [12]  698 	clr	_le_glcd_PARM_2
      000120 12r00r95         [24]  699 	lcall	_le_glcd
      000123 E5 82            [12]  700 	mov	a,dpl
      000125 20 E4 F4         [24]  701 	jb	acc.4,00101$
                                    702 ;	main.c:149: while(le_glcd(CMD, DIR) & 0x10); 
      000128                        703 00104$:
      000128 C2*00            [12]  704 	clr	_le_glcd_PARM_1
      00012A D2*01            [12]  705 	setb	_le_glcd_PARM_2
      00012C 12r00r95         [24]  706 	lcall	_le_glcd
      00012F E5 82            [12]  707 	mov	a,dpl
      000131 20 E4 F4         [24]  708 	jb	acc.4,00104$
                                    709 ;	main.c:152: esc_glcd(0x3F, CMD, ESQ);
      000134 C2*02            [12]  710 	clr	_esc_glcd_PARM_2
      000136 C2*03            [12]  711 	clr	_esc_glcd_PARM_3
      000138 75 82 3F         [24]  712 	mov	dpl,#0x3F
      00013B 12r00rC8         [24]  713 	lcall	_esc_glcd
                                    714 ;	main.c:153: esc_glcd(0x3F, CMD, DIR);
      00013E C2*02            [12]  715 	clr	_esc_glcd_PARM_2
      000140 D2*03            [12]  716 	setb	_esc_glcd_PARM_3
      000142 75 82 3F         [24]  717 	mov	dpl,#0x3F
      000145 12r00rC8         [24]  718 	lcall	_esc_glcd
                                    719 ;	main.c:158: esc_glcd(0x40, CMD, ESQ); // Y
      000148 C2*02            [12]  720 	clr	_esc_glcd_PARM_2
      00014A C2*03            [12]  721 	clr	_esc_glcd_PARM_3
      00014C 75 82 40         [24]  722 	mov	dpl,#0x40
      00014F 12r00rC8         [24]  723 	lcall	_esc_glcd
                                    724 ;	main.c:159: esc_glcd(0x40, CMD, DIR); // Y
      000152 C2*02            [12]  725 	clr	_esc_glcd_PARM_2
      000154 D2*03            [12]  726 	setb	_esc_glcd_PARM_3
      000156 75 82 40         [24]  727 	mov	dpl,#0x40
      000159 12r00rC8         [24]  728 	lcall	_esc_glcd
                                    729 ;	main.c:161: esc_glcd(0xB8, CMD, ESQ); // X
      00015C C2*02            [12]  730 	clr	_esc_glcd_PARM_2
      00015E C2*03            [12]  731 	clr	_esc_glcd_PARM_3
      000160 75 82 B8         [24]  732 	mov	dpl,#0xB8
      000163 12r00rC8         [24]  733 	lcall	_esc_glcd
                                    734 ;	main.c:162: esc_glcd(0xB8, CMD, DIR); // X
      000166 C2*02            [12]  735 	clr	_esc_glcd_PARM_2
      000168 D2*03            [12]  736 	setb	_esc_glcd_PARM_3
      00016A 75 82 B8         [24]  737 	mov	dpl,#0xB8
      00016D 12r00rC8         [24]  738 	lcall	_esc_glcd
                                    739 ;	main.c:164: esc_glcd(0xC0, CMD, ESQ); // Z
      000170 C2*02            [12]  740 	clr	_esc_glcd_PARM_2
      000172 C2*03            [12]  741 	clr	_esc_glcd_PARM_3
      000174 75 82 C0         [24]  742 	mov	dpl,#0xC0
      000177 12r00rC8         [24]  743 	lcall	_esc_glcd
                                    744 ;	main.c:165: esc_glcd(0xC0, CMD, DIR); // Z
      00017A C2*02            [12]  745 	clr	_esc_glcd_PARM_2
      00017C D2*03            [12]  746 	setb	_esc_glcd_PARM_3
      00017E 75 82 C0         [24]  747 	mov	dpl,#0xC0
      000181 02r00rC8         [24]  748 	ljmp	_esc_glcd
                                    749 ;------------------------------------------------------------
                                    750 ;Allocation info for local variables in function 'conf_y'
                                    751 ;------------------------------------------------------------
                                    752 ;y                         Allocated to registers r7 
                                    753 ;------------------------------------------------------------
                                    754 ;	main.c:170: void conf_y(unsigned char y, __bit cs){
                                    755 ;	-----------------------------------------
                                    756 ;	 function conf_y
                                    757 ;	-----------------------------------------
      000184                        758 _conf_y:
      000184 AF 82            [24]  759 	mov	r7,dpl
                                    760 ;	main.c:172: y = y & 0x3F;
      000186 53 07 3F         [24]  761 	anl	ar7,#0x3F
                                    762 ;	main.c:173: esc_glcd(0x40 | y, CMD, cs);
      000189 74 40            [12]  763 	mov	a,#0x40
      00018B 4F               [12]  764 	orl	a,r7
      00018C F5 82            [12]  765 	mov	dpl,a
      00018E C2*02            [12]  766 	clr	_esc_glcd_PARM_2
      000190 A2*04            [12]  767 	mov	c,_conf_y_PARM_2
      000192 92*03            [24]  768 	mov	_esc_glcd_PARM_3,c
      000194 02r00rC8         [24]  769 	ljmp	_esc_glcd
                                    770 ;------------------------------------------------------------
                                    771 ;Allocation info for local variables in function 'conf_pag'
                                    772 ;------------------------------------------------------------
                                    773 ;page                      Allocated to registers r7 
                                    774 ;------------------------------------------------------------
                                    775 ;	main.c:177: void conf_pag(unsigned char page, __bit cs){
                                    776 ;	-----------------------------------------
                                    777 ;	 function conf_pag
                                    778 ;	-----------------------------------------
      000197                        779 _conf_pag:
      000197 AF 82            [24]  780 	mov	r7,dpl
                                    781 ;	main.c:179: page = page & 0x07;
      000199 53 07 07         [24]  782 	anl	ar7,#0x07
                                    783 ;	main.c:180: esc_glcd(0xb8 | page, CMD, cs);
      00019C 74 B8            [12]  784 	mov	a,#0xB8
      00019E 4F               [12]  785 	orl	a,r7
      00019F F5 82            [12]  786 	mov	dpl,a
      0001A1 C2*02            [12]  787 	clr	_esc_glcd_PARM_2
      0001A3 A2*05            [12]  788 	mov	c,_conf_pag_PARM_2
      0001A5 92*03            [24]  789 	mov	_esc_glcd_PARM_3,c
      0001A7 02r00rC8         [24]  790 	ljmp	_esc_glcd
                                    791 ;------------------------------------------------------------
                                    792 ;Allocation info for local variables in function 'limp_glcd'
                                    793 ;------------------------------------------------------------
                                    794 ;i                         Allocated to registers r6 r7 
                                    795 ;j                         Allocated to registers r4 r5 
                                    796 ;------------------------------------------------------------
                                    797 ;	main.c:183: void limp_glcd(__bit cs){
                                    798 ;	-----------------------------------------
                                    799 ;	 function limp_glcd
                                    800 ;	-----------------------------------------
      0001AA                        801 _limp_glcd:
                                    802 ;	main.c:187: for(i = 0; i < 8; i++){
      0001AA 7E 00            [12]  803 	mov	r6,#0x00
      0001AC 7F 00            [12]  804 	mov	r7,#0x00
      0001AE                        805 00105$:
                                    806 ;	main.c:188: conf_pag(i, cs);
      0001AE 8E 82            [24]  807 	mov	dpl,r6
      0001B0 A2*06            [12]  808 	mov	c,_limp_glcd_PARM_1
      0001B2 92*05            [24]  809 	mov	_conf_pag_PARM_2,c
      0001B4 C0 07            [24]  810 	push	ar7
      0001B6 C0 06            [24]  811 	push	ar6
      0001B8 12r01r97         [24]  812 	lcall	_conf_pag
                                    813 ;	main.c:189: conf_y(0, cs);
      0001BB A2*06            [12]  814 	mov	c,_limp_glcd_PARM_1
      0001BD 92*04            [24]  815 	mov	_conf_y_PARM_2,c
      0001BF 75 82 00         [24]  816 	mov	dpl,#0x00
      0001C2 12r01r84         [24]  817 	lcall	_conf_y
      0001C5 D0 06            [24]  818 	pop	ar6
      0001C7 D0 07            [24]  819 	pop	ar7
                                    820 ;	main.c:190: for(j = 0; j < 64; j++){
      0001C9 7C 00            [12]  821 	mov	r4,#0x00
      0001CB 7D 00            [12]  822 	mov	r5,#0x00
      0001CD                        823 00103$:
                                    824 ;	main.c:191: esc_glcd(0x00, DATA, cs);
      0001CD D2*02            [12]  825 	setb	_esc_glcd_PARM_2
      0001CF A2*06            [12]  826 	mov	c,_limp_glcd_PARM_1
      0001D1 92*03            [24]  827 	mov	_esc_glcd_PARM_3,c
      0001D3 75 82 00         [24]  828 	mov	dpl,#0x00
      0001D6 C0 07            [24]  829 	push	ar7
      0001D8 C0 06            [24]  830 	push	ar6
      0001DA C0 05            [24]  831 	push	ar5
      0001DC C0 04            [24]  832 	push	ar4
      0001DE 12r00rC8         [24]  833 	lcall	_esc_glcd
      0001E1 D0 04            [24]  834 	pop	ar4
      0001E3 D0 05            [24]  835 	pop	ar5
      0001E5 D0 06            [24]  836 	pop	ar6
      0001E7 D0 07            [24]  837 	pop	ar7
                                    838 ;	main.c:190: for(j = 0; j < 64; j++){
      0001E9 0C               [12]  839 	inc	r4
      0001EA BC 00 01         [24]  840 	cjne	r4,#0x00,00120$
      0001ED 0D               [12]  841 	inc	r5
      0001EE                        842 00120$:
      0001EE C3               [12]  843 	clr	c
      0001EF EC               [12]  844 	mov	a,r4
      0001F0 94 40            [12]  845 	subb	a,#0x40
      0001F2 ED               [12]  846 	mov	a,r5
      0001F3 94 00            [12]  847 	subb	a,#0x00
      0001F5 40 D6            [24]  848 	jc	00103$
                                    849 ;	main.c:187: for(i = 0; i < 8; i++){
      0001F7 0E               [12]  850 	inc	r6
      0001F8 BE 00 01         [24]  851 	cjne	r6,#0x00,00122$
      0001FB 0F               [12]  852 	inc	r7
      0001FC                        853 00122$:
      0001FC C3               [12]  854 	clr	c
      0001FD EE               [12]  855 	mov	a,r6
      0001FE 94 08            [12]  856 	subb	a,#0x08
      000200 EF               [12]  857 	mov	a,r7
      000201 94 00            [12]  858 	subb	a,#0x00
      000203 40 A9            [24]  859 	jc	00105$
      000205 22               [24]  860 	ret
                                    861 ;------------------------------------------------------------
                                    862 ;Allocation info for local variables in function 'escreveEspaco'
                                    863 ;------------------------------------------------------------
                                    864 ;	main.c:198: void escreveEspaco(__bit cs){
                                    865 ;	-----------------------------------------
                                    866 ;	 function escreveEspaco
                                    867 ;	-----------------------------------------
      000206                        868 _escreveEspaco:
                                    869 ;	main.c:199: esc_glcd(0x00, DATA, cs);
      000206 D2*02            [12]  870 	setb	_esc_glcd_PARM_2
      000208 A2*07            [12]  871 	mov	c,_escreveEspaco_PARM_1
      00020A 92*03            [24]  872 	mov	_esc_glcd_PARM_3,c
      00020C 75 82 00         [24]  873 	mov	dpl,#0x00
      00020F 12r00rC8         [24]  874 	lcall	_esc_glcd
                                    875 ;	main.c:200: esc_glcd(0x00, DATA, cs);
      000212 D2*02            [12]  876 	setb	_esc_glcd_PARM_2
      000214 A2*07            [12]  877 	mov	c,_escreveEspaco_PARM_1
      000216 92*03            [24]  878 	mov	_esc_glcd_PARM_3,c
      000218 75 82 00         [24]  879 	mov	dpl,#0x00
      00021B 12r00rC8         [24]  880 	lcall	_esc_glcd
                                    881 ;	main.c:201: esc_glcd(0x00, DATA, cs);	
      00021E D2*02            [12]  882 	setb	_esc_glcd_PARM_2
      000220 A2*07            [12]  883 	mov	c,_escreveEspaco_PARM_1
      000222 92*03            [24]  884 	mov	_esc_glcd_PARM_3,c
      000224 75 82 00         [24]  885 	mov	dpl,#0x00
      000227 02r00rC8         [24]  886 	ljmp	_esc_glcd
                                    887 ;------------------------------------------------------------
                                    888 ;Allocation info for local variables in function 'putchar'
                                    889 ;------------------------------------------------------------
                                    890 ;c                         Allocated to registers r7 
                                    891 ;i                         Allocated to registers r5 r6 
                                    892 ;------------------------------------------------------------
                                    893 ;	main.c:208: void putchar(char c){
                                    894 ;	-----------------------------------------
                                    895 ;	 function putchar
                                    896 ;	-----------------------------------------
      00022A                        897 _putchar:
      00022A AF 82            [24]  898 	mov	r7,dpl
                                    899 ;	main.c:212: if(c < 9){
      00022C C3               [12]  900 	clr	c
      00022D EF               [12]  901 	mov	a,r7
      00022E 64 80            [12]  902 	xrl	a,#0x80
      000230 94 89            [12]  903 	subb	a,#0x89
      000232 50 2A            [24]  904 	jnc	00112$
                                    905 ;	main.c:213: conf_pag(c - 1, ESQ);
      000234 EF               [12]  906 	mov	a,r7
      000235 14               [12]  907 	dec	a
      000236 FE               [12]  908 	mov	r6,a
      000237 C2*05            [12]  909 	clr	_conf_pag_PARM_2
      000239 8E 82            [24]  910 	mov	dpl,r6
      00023B C0 06            [24]  911 	push	ar6
      00023D 12r01r97         [24]  912 	lcall	_conf_pag
      000240 D0 06            [24]  913 	pop	ar6
                                    914 ;	main.c:214: conf_pag(c - 1, DIR);
      000242 D2*05            [12]  915 	setb	_conf_pag_PARM_2
      000244 8E 82            [24]  916 	mov	dpl,r6
      000246 12r01r97         [24]  917 	lcall	_conf_pag
                                    918 ;	main.c:215: conf_y(0, ESQ);
      000249 C2*04            [12]  919 	clr	_conf_y_PARM_2
      00024B 75 82 00         [24]  920 	mov	dpl,#0x00
      00024E 12r01r84         [24]  921 	lcall	_conf_y
                                    922 ;	main.c:216: conf_y(0, DIR);
      000251 D2*04            [12]  923 	setb	_conf_y_PARM_2
      000253 75 82 00         [24]  924 	mov	dpl,#0x00
      000256 12r01r84         [24]  925 	lcall	_conf_y
                                    926 ;	main.c:217: contador = 0;
      000259 75*00 00         [24]  927 	mov	_contador,#0x00
                                    928 ;	main.c:222: for(i = 0; i < 5; i++){
      00025C 80 6D            [24]  929 	sjmp	00104$
      00025E                        930 00112$:
      00025E 7D 00            [12]  931 	mov	r5,#0x00
      000260 7E 00            [12]  932 	mov	r6,#0x00
      000262                        933 00107$:
                                    934 ;	main.c:223: esc_glcd(fonte[c - 32][i], DATA, POS);
      000262 EF               [12]  935 	mov	a,r7
      000263 FB               [12]  936 	mov	r3,a
      000264 33               [12]  937 	rlc	a
      000265 95 E0            [12]  938 	subb	a,acc
      000267 FC               [12]  939 	mov	r4,a
      000268 EB               [12]  940 	mov	a,r3
      000269 24 E0            [12]  941 	add	a,#0xE0
      00026B F5*00            [12]  942 	mov	__mulint_PARM_2,a
      00026D EC               [12]  943 	mov	a,r4
      00026E 34 FF            [12]  944 	addc	a,#0xFF
      000270 F5*01            [12]  945 	mov	(__mulint_PARM_2 + 1),a
      000272 90 00 05         [24]  946 	mov	dptr,#0x0005
      000275 C0 07            [24]  947 	push	ar7
      000277 C0 06            [24]  948 	push	ar6
      000279 C0 05            [24]  949 	push	ar5
      00027B 12r00r00         [24]  950 	lcall	__mulint
      00027E AB 82            [24]  951 	mov	r3,dpl
      000280 AC 83            [24]  952 	mov	r4,dph
      000282 D0 05            [24]  953 	pop	ar5
      000284 D0 06            [24]  954 	pop	ar6
      000286 EB               [12]  955 	mov	a,r3
      000287 24r00            [12]  956 	add	a,#_fonte
      000289 FB               [12]  957 	mov	r3,a
      00028A EC               [12]  958 	mov	a,r4
      00028B 34s00            [12]  959 	addc	a,#(_fonte >> 8)
      00028D FC               [12]  960 	mov	r4,a
      00028E ED               [12]  961 	mov	a,r5
      00028F 2B               [12]  962 	add	a,r3
      000290 F5 82            [12]  963 	mov	dpl,a
      000292 EE               [12]  964 	mov	a,r6
      000293 3C               [12]  965 	addc	a,r4
      000294 F5 83            [12]  966 	mov	dph,a
      000296 E4               [12]  967 	clr	a
      000297 93               [24]  968 	movc	a,@a+dptr
      000298 FC               [12]  969 	mov	r4,a
      000299 E5*01            [12]  970 	mov	a,_POS
      00029B 24 FF            [12]  971 	add	a,#0xff
      00029D 92*03            [24]  972 	mov	_esc_glcd_PARM_3,c
      00029F D2*02            [12]  973 	setb	_esc_glcd_PARM_2
      0002A1 8C 82            [24]  974 	mov	dpl,r4
      0002A3 C0 06            [24]  975 	push	ar6
      0002A5 C0 05            [24]  976 	push	ar5
      0002A7 12r00rC8         [24]  977 	lcall	_esc_glcd
      0002AA D0 05            [24]  978 	pop	ar5
      0002AC D0 06            [24]  979 	pop	ar6
      0002AE D0 07            [24]  980 	pop	ar7
                                    981 ;	main.c:222: for(i = 0; i < 5; i++){
      0002B0 0D               [12]  982 	inc	r5
      0002B1 BD 00 01         [24]  983 	cjne	r5,#0x00,00125$
      0002B4 0E               [12]  984 	inc	r6
      0002B5                        985 00125$:
      0002B5 C3               [12]  986 	clr	c
      0002B6 ED               [12]  987 	mov	a,r5
      0002B7 94 05            [12]  988 	subb	a,#0x05
      0002B9 EE               [12]  989 	mov	a,r6
      0002BA 64 80            [12]  990 	xrl	a,#0x80
      0002BC 94 80            [12]  991 	subb	a,#0x80
      0002BE 40 A2            [24]  992 	jc	00107$
                                    993 ;	main.c:226: escreveEspaco(POS);
      0002C0 E5*01            [12]  994 	mov	a,_POS
      0002C2 24 FF            [12]  995 	add	a,#0xff
      0002C4 92*07            [24]  996 	mov	_escreveEspaco_PARM_1,c
      0002C6 12r02r06         [24]  997 	lcall	_escreveEspaco
                                    998 ;	main.c:227: contador = contador + 1;
      0002C9 05*00            [12]  999 	inc	_contador
      0002CB                       1000 00104$:
                                   1001 ;	main.c:230: if (contador == 8){
      0002CB 74 08            [12] 1002 	mov	a,#0x08
      0002CD B5*00 0C         [24] 1003 	cjne	a,_contador,00109$
                                   1004 ;	main.c:231: POS = !POS;
      0002D0 E5*01            [12] 1005 	mov	a,_POS
      0002D2 B4 01 00         [24] 1006 	cjne	a,#0x01,00129$
      0002D5                       1007 00129$:
      0002D5 E4               [12] 1008 	clr	a
      0002D6 33               [12] 1009 	rlc	a
      0002D7 F5*01            [12] 1010 	mov	_POS,a
                                   1011 ;	main.c:232: contador = 0;
      0002D9 75*00 00         [24] 1012 	mov	_contador,#0x00
      0002DC                       1013 00109$:
      0002DC 22               [24] 1014 	ret
                                   1015 ;------------------------------------------------------------
                                   1016 ;Allocation info for local variables in function 'main'
                                   1017 ;------------------------------------------------------------
                                   1018 ;	main.c:237: void main(){
                                   1019 ;	-----------------------------------------
                                   1020 ;	 function main
                                   1021 ;	-----------------------------------------
      0002DD                       1022 _main:
                                   1023 ;	main.c:243: Init_LCGD();
      0002DD 12r01r11         [24] 1024 	lcall	_Init_LCGD
                                   1025 ;	main.c:245: limp_glcd(ESQ);
      0002E0 C2*06            [12] 1026 	clr	_limp_glcd_PARM_1
      0002E2 12r01rAA         [24] 1027 	lcall	_limp_glcd
                                   1028 ;	main.c:246: limp_glcd(DIR);
      0002E5 D2*06            [12] 1029 	setb	_limp_glcd_PARM_1
      0002E7 12r01rAA         [24] 1030 	lcall	_limp_glcd
                                   1031 ;	main.c:248: printf_fast_f("\x01linha 1        >");
      0002EA 74rE0            [12] 1032 	mov	a,#___str_0
      0002EC C0 E0            [24] 1033 	push	acc
      0002EE 74s01            [12] 1034 	mov	a,#(___str_0 >> 8)
      0002F0 C0 E0            [24] 1035 	push	acc
      0002F2 12r00r00         [24] 1036 	lcall	_printf_fast_f
      0002F5 15 81            [12] 1037 	dec	sp
      0002F7 15 81            [12] 1038 	dec	sp
                                   1039 ;	main.c:249: printf_fast_f("\x02 linha 2       >");
      0002F9 74rF2            [12] 1040 	mov	a,#___str_1
      0002FB C0 E0            [24] 1041 	push	acc
      0002FD 74s01            [12] 1042 	mov	a,#(___str_1 >> 8)
      0002FF C0 E0            [24] 1043 	push	acc
      000301 12r00r00         [24] 1044 	lcall	_printf_fast_f
      000304 15 81            [12] 1045 	dec	sp
      000306 15 81            [12] 1046 	dec	sp
                                   1047 ;	main.c:250: printf_fast_f("\x03  linha 3      >");
      000308 74r04            [12] 1048 	mov	a,#___str_2
      00030A C0 E0            [24] 1049 	push	acc
      00030C 74s02            [12] 1050 	mov	a,#(___str_2 >> 8)
      00030E C0 E0            [24] 1051 	push	acc
      000310 12r00r00         [24] 1052 	lcall	_printf_fast_f
      000313 15 81            [12] 1053 	dec	sp
      000315 15 81            [12] 1054 	dec	sp
                                   1055 ;	main.c:251: printf_fast_f("\x04   linha 4     >");
      000317 74r16            [12] 1056 	mov	a,#___str_3
      000319 C0 E0            [24] 1057 	push	acc
      00031B 74s02            [12] 1058 	mov	a,#(___str_3 >> 8)
      00031D C0 E0            [24] 1059 	push	acc
      00031F 12r00r00         [24] 1060 	lcall	_printf_fast_f
      000322 15 81            [12] 1061 	dec	sp
      000324 15 81            [12] 1062 	dec	sp
                                   1063 ;	main.c:252: printf_fast_f("\x05    linha 5    >");
      000326 74r28            [12] 1064 	mov	a,#___str_4
      000328 C0 E0            [24] 1065 	push	acc
      00032A 74s02            [12] 1066 	mov	a,#(___str_4 >> 8)
      00032C C0 E0            [24] 1067 	push	acc
      00032E 12r00r00         [24] 1068 	lcall	_printf_fast_f
      000331 15 81            [12] 1069 	dec	sp
      000333 15 81            [12] 1070 	dec	sp
                                   1071 ;	main.c:253: printf_fast_f("\x06     linha 6   >");	
      000335 74r3A            [12] 1072 	mov	a,#___str_5
      000337 C0 E0            [24] 1073 	push	acc
      000339 74s02            [12] 1074 	mov	a,#(___str_5 >> 8)
      00033B C0 E0            [24] 1075 	push	acc
      00033D 12r00r00         [24] 1076 	lcall	_printf_fast_f
      000340 15 81            [12] 1077 	dec	sp
      000342 15 81            [12] 1078 	dec	sp
                                   1079 ;	main.c:254: printf_fast_f("\x07      linha 7  >");
      000344 74r4C            [12] 1080 	mov	a,#___str_6
      000346 C0 E0            [24] 1081 	push	acc
      000348 74s02            [12] 1082 	mov	a,#(___str_6 >> 8)
      00034A C0 E0            [24] 1083 	push	acc
      00034C 12r00r00         [24] 1084 	lcall	_printf_fast_f
      00034F 15 81            [12] 1085 	dec	sp
      000351 15 81            [12] 1086 	dec	sp
                                   1087 ;	main.c:255: printf_fast_f("\x08       linha 8 >");
      000353 74r5E            [12] 1088 	mov	a,#___str_7
      000355 C0 E0            [24] 1089 	push	acc
      000357 74s02            [12] 1090 	mov	a,#(___str_7 >> 8)
      000359 C0 E0            [24] 1091 	push	acc
      00035B 12r00r00         [24] 1092 	lcall	_printf_fast_f
      00035E 15 81            [12] 1093 	dec	sp
      000360 15 81            [12] 1094 	dec	sp
                                   1095 ;	main.c:257: delay_ms(1000);
      000362 90 03 E8         [24] 1096 	mov	dptr,#0x03E8
      000365 12r00r10         [24] 1097 	lcall	_delay_ms
                                   1098 ;	main.c:259: printf_fast_f("\x04var = %5.1f    >", 123.568);
      000368 74 D1            [12] 1099 	mov	a,#0xD1
      00036A C0 E0            [24] 1100 	push	acc
      00036C 74 22            [12] 1101 	mov	a,#0x22
      00036E C0 E0            [24] 1102 	push	acc
      000370 74 F7            [12] 1103 	mov	a,#0xF7
      000372 C0 E0            [24] 1104 	push	acc
      000374 74 42            [12] 1105 	mov	a,#0x42
      000376 C0 E0            [24] 1106 	push	acc
      000378 74r70            [12] 1107 	mov	a,#___str_8
      00037A C0 E0            [24] 1108 	push	acc
      00037C 74s02            [12] 1109 	mov	a,#(___str_8 >> 8)
      00037E C0 E0            [24] 1110 	push	acc
      000380 12r00r00         [24] 1111 	lcall	_printf_fast_f
      000383 E5 81            [12] 1112 	mov	a,sp
      000385 24 FA            [12] 1113 	add	a,#0xfa
      000387 F5 81            [12] 1114 	mov	sp,a
                                   1115 ;	main.c:261: while(1);
      000389                       1116 00102$:
      000389 80 FE            [24] 1117 	sjmp	00102$
                                   1118 	.area CSEG    (CODE)
                                   1119 	.area CONST   (CODE)
      000000                       1120 _fonte:
      000000 00                    1121 	.db #0x00	;  0
      000001 00                    1122 	.db #0x00	;  0
      000002 00                    1123 	.db #0x00	;  0
      000003 00                    1124 	.db #0x00	;  0
      000004 00                    1125 	.db #0x00	;  0
      000005 00                    1126 	.db #0x00	;  0
      000006 00                    1127 	.db #0x00	;  0
      000007 5F                    1128 	.db #0x5F	;  95
      000008 00                    1129 	.db #0x00	;  0
      000009 00                    1130 	.db #0x00	;  0
      00000A 00                    1131 	.db #0x00	;  0
      00000B 07                    1132 	.db #0x07	;  7
      00000C 00                    1133 	.db #0x00	;  0
      00000D 07                    1134 	.db #0x07	;  7
      00000E 00                    1135 	.db #0x00	;  0
      00000F 14                    1136 	.db #0x14	;  20
      000010 7F                    1137 	.db #0x7F	;  127
      000011 14                    1138 	.db #0x14	;  20
      000012 7F                    1139 	.db #0x7F	;  127
      000013 14                    1140 	.db #0x14	;  20
      000014 24                    1141 	.db #0x24	;  36
      000015 2A                    1142 	.db #0x2A	;  42
      000016 7F                    1143 	.db #0x7F	;  127
      000017 2A                    1144 	.db #0x2A	;  42
      000018 12                    1145 	.db #0x12	;  18
      000019 23                    1146 	.db #0x23	;  35
      00001A 13                    1147 	.db #0x13	;  19
      00001B 08                    1148 	.db #0x08	;  8
      00001C 64                    1149 	.db #0x64	;  100	'd'
      00001D 62                    1150 	.db #0x62	;  98	'b'
      00001E 36                    1151 	.db #0x36	;  54	'6'
      00001F 49                    1152 	.db #0x49	;  73	'I'
      000020 55                    1153 	.db #0x55	;  85	'U'
      000021 22                    1154 	.db #0x22	;  34
      000022 50                    1155 	.db #0x50	;  80	'P'
      000023 00                    1156 	.db #0x00	;  0
      000024 05                    1157 	.db #0x05	;  5
      000025 03                    1158 	.db #0x03	;  3
      000026 00                    1159 	.db #0x00	;  0
      000027 00                    1160 	.db #0x00	;  0
      000028 00                    1161 	.db #0x00	;  0
      000029 1C                    1162 	.db #0x1C	;  28
      00002A 22                    1163 	.db #0x22	;  34
      00002B 41                    1164 	.db #0x41	;  65	'A'
      00002C 00                    1165 	.db #0x00	;  0
      00002D 00                    1166 	.db #0x00	;  0
      00002E 41                    1167 	.db #0x41	;  65	'A'
      00002F 22                    1168 	.db #0x22	;  34
      000030 1C                    1169 	.db #0x1C	;  28
      000031 00                    1170 	.db #0x00	;  0
      000032 08                    1171 	.db #0x08	;  8
      000033 2A                    1172 	.db #0x2A	;  42
      000034 1C                    1173 	.db #0x1C	;  28
      000035 2A                    1174 	.db #0x2A	;  42
      000036 08                    1175 	.db #0x08	;  8
      000037 08                    1176 	.db #0x08	;  8
      000038 08                    1177 	.db #0x08	;  8
      000039 3E                    1178 	.db #0x3E	;  62
      00003A 08                    1179 	.db #0x08	;  8
      00003B 08                    1180 	.db #0x08	;  8
      00003C 00                    1181 	.db #0x00	;  0
      00003D 50                    1182 	.db #0x50	;  80	'P'
      00003E 30                    1183 	.db #0x30	;  48	'0'
      00003F 00                    1184 	.db #0x00	;  0
      000040 00                    1185 	.db #0x00	;  0
      000041 08                    1186 	.db #0x08	;  8
      000042 08                    1187 	.db #0x08	;  8
      000043 08                    1188 	.db #0x08	;  8
      000044 08                    1189 	.db #0x08	;  8
      000045 08                    1190 	.db #0x08	;  8
      000046 00                    1191 	.db #0x00	;  0
      000047 30                    1192 	.db #0x30	;  48	'0'
      000048 30                    1193 	.db #0x30	;  48	'0'
      000049 00                    1194 	.db #0x00	;  0
      00004A 00                    1195 	.db #0x00	;  0
      00004B 20                    1196 	.db #0x20	;  32
      00004C 10                    1197 	.db #0x10	;  16
      00004D 08                    1198 	.db #0x08	;  8
      00004E 04                    1199 	.db #0x04	;  4
      00004F 02                    1200 	.db #0x02	;  2
      000050 3E                    1201 	.db #0x3E	;  62
      000051 51                    1202 	.db #0x51	;  81	'Q'
      000052 49                    1203 	.db #0x49	;  73	'I'
      000053 45                    1204 	.db #0x45	;  69	'E'
      000054 3E                    1205 	.db #0x3E	;  62
      000055 00                    1206 	.db #0x00	;  0
      000056 42                    1207 	.db #0x42	;  66	'B'
      000057 7F                    1208 	.db #0x7F	;  127
      000058 40                    1209 	.db #0x40	;  64
      000059 00                    1210 	.db #0x00	;  0
      00005A 42                    1211 	.db #0x42	;  66	'B'
      00005B 61                    1212 	.db #0x61	;  97	'a'
      00005C 51                    1213 	.db #0x51	;  81	'Q'
      00005D 49                    1214 	.db #0x49	;  73	'I'
      00005E 46                    1215 	.db #0x46	;  70	'F'
      00005F 21                    1216 	.db #0x21	;  33
      000060 41                    1217 	.db #0x41	;  65	'A'
      000061 45                    1218 	.db #0x45	;  69	'E'
      000062 4B                    1219 	.db #0x4B	;  75	'K'
      000063 31                    1220 	.db #0x31	;  49	'1'
      000064 18                    1221 	.db #0x18	;  24
      000065 14                    1222 	.db #0x14	;  20
      000066 12                    1223 	.db #0x12	;  18
      000067 7F                    1224 	.db #0x7F	;  127
      000068 10                    1225 	.db #0x10	;  16
      000069 27                    1226 	.db #0x27	;  39
      00006A 45                    1227 	.db #0x45	;  69	'E'
      00006B 45                    1228 	.db #0x45	;  69	'E'
      00006C 45                    1229 	.db #0x45	;  69	'E'
      00006D 39                    1230 	.db #0x39	;  57	'9'
      00006E 3C                    1231 	.db #0x3C	;  60
      00006F 4A                    1232 	.db #0x4A	;  74	'J'
      000070 49                    1233 	.db #0x49	;  73	'I'
      000071 49                    1234 	.db #0x49	;  73	'I'
      000072 30                    1235 	.db #0x30	;  48	'0'
      000073 01                    1236 	.db #0x01	;  1
      000074 71                    1237 	.db #0x71	;  113	'q'
      000075 09                    1238 	.db #0x09	;  9
      000076 05                    1239 	.db #0x05	;  5
      000077 03                    1240 	.db #0x03	;  3
      000078 36                    1241 	.db #0x36	;  54	'6'
      000079 49                    1242 	.db #0x49	;  73	'I'
      00007A 49                    1243 	.db #0x49	;  73	'I'
      00007B 49                    1244 	.db #0x49	;  73	'I'
      00007C 36                    1245 	.db #0x36	;  54	'6'
      00007D 06                    1246 	.db #0x06	;  6
      00007E 49                    1247 	.db #0x49	;  73	'I'
      00007F 49                    1248 	.db #0x49	;  73	'I'
      000080 29                    1249 	.db #0x29	;  41
      000081 1E                    1250 	.db #0x1E	;  30
      000082 00                    1251 	.db #0x00	;  0
      000083 36                    1252 	.db #0x36	;  54	'6'
      000084 36                    1253 	.db #0x36	;  54	'6'
      000085 00                    1254 	.db #0x00	;  0
      000086 00                    1255 	.db #0x00	;  0
      000087 00                    1256 	.db #0x00	;  0
      000088 56                    1257 	.db #0x56	;  86	'V'
      000089 36                    1258 	.db #0x36	;  54	'6'
      00008A 00                    1259 	.db #0x00	;  0
      00008B 00                    1260 	.db #0x00	;  0
      00008C 00                    1261 	.db #0x00	;  0
      00008D 08                    1262 	.db #0x08	;  8
      00008E 14                    1263 	.db #0x14	;  20
      00008F 22                    1264 	.db #0x22	;  34
      000090 41                    1265 	.db #0x41	;  65	'A'
      000091 14                    1266 	.db #0x14	;  20
      000092 14                    1267 	.db #0x14	;  20
      000093 14                    1268 	.db #0x14	;  20
      000094 14                    1269 	.db #0x14	;  20
      000095 14                    1270 	.db #0x14	;  20
      000096 41                    1271 	.db #0x41	;  65	'A'
      000097 22                    1272 	.db #0x22	;  34
      000098 14                    1273 	.db #0x14	;  20
      000099 08                    1274 	.db #0x08	;  8
      00009A 00                    1275 	.db #0x00	;  0
      00009B 02                    1276 	.db #0x02	;  2
      00009C 01                    1277 	.db #0x01	;  1
      00009D 51                    1278 	.db #0x51	;  81	'Q'
      00009E 09                    1279 	.db #0x09	;  9
      00009F 06                    1280 	.db #0x06	;  6
      0000A0 32                    1281 	.db #0x32	;  50	'2'
      0000A1 49                    1282 	.db #0x49	;  73	'I'
      0000A2 79                    1283 	.db #0x79	;  121	'y'
      0000A3 41                    1284 	.db #0x41	;  65	'A'
      0000A4 3E                    1285 	.db #0x3E	;  62
      0000A5 7E                    1286 	.db #0x7E	;  126
      0000A6 11                    1287 	.db #0x11	;  17
      0000A7 11                    1288 	.db #0x11	;  17
      0000A8 11                    1289 	.db #0x11	;  17
      0000A9 7E                    1290 	.db #0x7E	;  126
      0000AA 7F                    1291 	.db #0x7F	;  127
      0000AB 49                    1292 	.db #0x49	;  73	'I'
      0000AC 49                    1293 	.db #0x49	;  73	'I'
      0000AD 49                    1294 	.db #0x49	;  73	'I'
      0000AE 36                    1295 	.db #0x36	;  54	'6'
      0000AF 3E                    1296 	.db #0x3E	;  62
      0000B0 41                    1297 	.db #0x41	;  65	'A'
      0000B1 41                    1298 	.db #0x41	;  65	'A'
      0000B2 41                    1299 	.db #0x41	;  65	'A'
      0000B3 22                    1300 	.db #0x22	;  34
      0000B4 7F                    1301 	.db #0x7F	;  127
      0000B5 41                    1302 	.db #0x41	;  65	'A'
      0000B6 41                    1303 	.db #0x41	;  65	'A'
      0000B7 22                    1304 	.db #0x22	;  34
      0000B8 1C                    1305 	.db #0x1C	;  28
      0000B9 7F                    1306 	.db #0x7F	;  127
      0000BA 49                    1307 	.db #0x49	;  73	'I'
      0000BB 49                    1308 	.db #0x49	;  73	'I'
      0000BC 49                    1309 	.db #0x49	;  73	'I'
      0000BD 41                    1310 	.db #0x41	;  65	'A'
      0000BE 7F                    1311 	.db #0x7F	;  127
      0000BF 09                    1312 	.db #0x09	;  9
      0000C0 09                    1313 	.db #0x09	;  9
      0000C1 01                    1314 	.db #0x01	;  1
      0000C2 01                    1315 	.db #0x01	;  1
      0000C3 3E                    1316 	.db #0x3E	;  62
      0000C4 41                    1317 	.db #0x41	;  65	'A'
      0000C5 41                    1318 	.db #0x41	;  65	'A'
      0000C6 51                    1319 	.db #0x51	;  81	'Q'
      0000C7 32                    1320 	.db #0x32	;  50	'2'
      0000C8 7F                    1321 	.db #0x7F	;  127
      0000C9 08                    1322 	.db #0x08	;  8
      0000CA 08                    1323 	.db #0x08	;  8
      0000CB 08                    1324 	.db #0x08	;  8
      0000CC 7F                    1325 	.db #0x7F	;  127
      0000CD 00                    1326 	.db #0x00	;  0
      0000CE 41                    1327 	.db #0x41	;  65	'A'
      0000CF 7F                    1328 	.db #0x7F	;  127
      0000D0 41                    1329 	.db #0x41	;  65	'A'
      0000D1 00                    1330 	.db #0x00	;  0
      0000D2 20                    1331 	.db #0x20	;  32
      0000D3 40                    1332 	.db #0x40	;  64
      0000D4 41                    1333 	.db #0x41	;  65	'A'
      0000D5 3F                    1334 	.db #0x3F	;  63
      0000D6 01                    1335 	.db #0x01	;  1
      0000D7 7F                    1336 	.db #0x7F	;  127
      0000D8 08                    1337 	.db #0x08	;  8
      0000D9 14                    1338 	.db #0x14	;  20
      0000DA 22                    1339 	.db #0x22	;  34
      0000DB 41                    1340 	.db #0x41	;  65	'A'
      0000DC 7F                    1341 	.db #0x7F	;  127
      0000DD 40                    1342 	.db #0x40	;  64
      0000DE 40                    1343 	.db #0x40	;  64
      0000DF 40                    1344 	.db #0x40	;  64
      0000E0 40                    1345 	.db #0x40	;  64
      0000E1 7F                    1346 	.db #0x7F	;  127
      0000E2 02                    1347 	.db #0x02	;  2
      0000E3 04                    1348 	.db #0x04	;  4
      0000E4 02                    1349 	.db #0x02	;  2
      0000E5 7F                    1350 	.db #0x7F	;  127
      0000E6 7F                    1351 	.db #0x7F	;  127
      0000E7 04                    1352 	.db #0x04	;  4
      0000E8 08                    1353 	.db #0x08	;  8
      0000E9 10                    1354 	.db #0x10	;  16
      0000EA 7F                    1355 	.db #0x7F	;  127
      0000EB 3E                    1356 	.db #0x3E	;  62
      0000EC 41                    1357 	.db #0x41	;  65	'A'
      0000ED 41                    1358 	.db #0x41	;  65	'A'
      0000EE 41                    1359 	.db #0x41	;  65	'A'
      0000EF 3E                    1360 	.db #0x3E	;  62
      0000F0 7F                    1361 	.db #0x7F	;  127
      0000F1 09                    1362 	.db #0x09	;  9
      0000F2 09                    1363 	.db #0x09	;  9
      0000F3 09                    1364 	.db #0x09	;  9
      0000F4 06                    1365 	.db #0x06	;  6
      0000F5 3E                    1366 	.db #0x3E	;  62
      0000F6 41                    1367 	.db #0x41	;  65	'A'
      0000F7 51                    1368 	.db #0x51	;  81	'Q'
      0000F8 21                    1369 	.db #0x21	;  33
      0000F9 5E                    1370 	.db #0x5E	;  94
      0000FA 7F                    1371 	.db #0x7F	;  127
      0000FB 09                    1372 	.db #0x09	;  9
      0000FC 19                    1373 	.db #0x19	;  25
      0000FD 29                    1374 	.db #0x29	;  41
      0000FE 46                    1375 	.db #0x46	;  70	'F'
      0000FF 46                    1376 	.db #0x46	;  70	'F'
      000100 49                    1377 	.db #0x49	;  73	'I'
      000101 49                    1378 	.db #0x49	;  73	'I'
      000102 49                    1379 	.db #0x49	;  73	'I'
      000103 31                    1380 	.db #0x31	;  49	'1'
      000104 01                    1381 	.db #0x01	;  1
      000105 01                    1382 	.db #0x01	;  1
      000106 7F                    1383 	.db #0x7F	;  127
      000107 01                    1384 	.db #0x01	;  1
      000108 01                    1385 	.db #0x01	;  1
      000109 3F                    1386 	.db #0x3F	;  63
      00010A 40                    1387 	.db #0x40	;  64
      00010B 40                    1388 	.db #0x40	;  64
      00010C 40                    1389 	.db #0x40	;  64
      00010D 3F                    1390 	.db #0x3F	;  63
      00010E 1F                    1391 	.db #0x1F	;  31
      00010F 20                    1392 	.db #0x20	;  32
      000110 40                    1393 	.db #0x40	;  64
      000111 20                    1394 	.db #0x20	;  32
      000112 1F                    1395 	.db #0x1F	;  31
      000113 7F                    1396 	.db #0x7F	;  127
      000114 20                    1397 	.db #0x20	;  32
      000115 18                    1398 	.db #0x18	;  24
      000116 20                    1399 	.db #0x20	;  32
      000117 7F                    1400 	.db #0x7F	;  127
      000118 63                    1401 	.db #0x63	;  99	'c'
      000119 14                    1402 	.db #0x14	;  20
      00011A 08                    1403 	.db #0x08	;  8
      00011B 14                    1404 	.db #0x14	;  20
      00011C 63                    1405 	.db #0x63	;  99	'c'
      00011D 03                    1406 	.db #0x03	;  3
      00011E 04                    1407 	.db #0x04	;  4
      00011F 78                    1408 	.db #0x78	;  120	'x'
      000120 04                    1409 	.db #0x04	;  4
      000121 03                    1410 	.db #0x03	;  3
      000122 61                    1411 	.db #0x61	;  97	'a'
      000123 51                    1412 	.db #0x51	;  81	'Q'
      000124 49                    1413 	.db #0x49	;  73	'I'
      000125 45                    1414 	.db #0x45	;  69	'E'
      000126 43                    1415 	.db #0x43	;  67	'C'
      000127 00                    1416 	.db #0x00	;  0
      000128 00                    1417 	.db #0x00	;  0
      000129 7F                    1418 	.db #0x7F	;  127
      00012A 41                    1419 	.db #0x41	;  65	'A'
      00012B 41                    1420 	.db #0x41	;  65	'A'
      00012C 02                    1421 	.db #0x02	;  2
      00012D 04                    1422 	.db #0x04	;  4
      00012E 08                    1423 	.db #0x08	;  8
      00012F 10                    1424 	.db #0x10	;  16
      000130 20                    1425 	.db #0x20	;  32
      000131 41                    1426 	.db #0x41	;  65	'A'
      000132 41                    1427 	.db #0x41	;  65	'A'
      000133 7F                    1428 	.db #0x7F	;  127
      000134 00                    1429 	.db #0x00	;  0
      000135 00                    1430 	.db #0x00	;  0
      000136 04                    1431 	.db #0x04	;  4
      000137 02                    1432 	.db #0x02	;  2
      000138 01                    1433 	.db #0x01	;  1
      000139 02                    1434 	.db #0x02	;  2
      00013A 04                    1435 	.db #0x04	;  4
      00013B 40                    1436 	.db #0x40	;  64
      00013C 40                    1437 	.db #0x40	;  64
      00013D 40                    1438 	.db #0x40	;  64
      00013E 40                    1439 	.db #0x40	;  64
      00013F 40                    1440 	.db #0x40	;  64
      000140 00                    1441 	.db #0x00	;  0
      000141 01                    1442 	.db #0x01	;  1
      000142 02                    1443 	.db #0x02	;  2
      000143 04                    1444 	.db #0x04	;  4
      000144 00                    1445 	.db #0x00	;  0
      000145 20                    1446 	.db #0x20	;  32
      000146 54                    1447 	.db #0x54	;  84	'T'
      000147 54                    1448 	.db #0x54	;  84	'T'
      000148 54                    1449 	.db #0x54	;  84	'T'
      000149 78                    1450 	.db #0x78	;  120	'x'
      00014A 7F                    1451 	.db #0x7F	;  127
      00014B 48                    1452 	.db #0x48	;  72	'H'
      00014C 44                    1453 	.db #0x44	;  68	'D'
      00014D 44                    1454 	.db #0x44	;  68	'D'
      00014E 38                    1455 	.db #0x38	;  56	'8'
      00014F 38                    1456 	.db #0x38	;  56	'8'
      000150 44                    1457 	.db #0x44	;  68	'D'
      000151 44                    1458 	.db #0x44	;  68	'D'
      000152 44                    1459 	.db #0x44	;  68	'D'
      000153 20                    1460 	.db #0x20	;  32
      000154 38                    1461 	.db #0x38	;  56	'8'
      000155 44                    1462 	.db #0x44	;  68	'D'
      000156 44                    1463 	.db #0x44	;  68	'D'
      000157 48                    1464 	.db #0x48	;  72	'H'
      000158 7F                    1465 	.db #0x7F	;  127
      000159 38                    1466 	.db #0x38	;  56	'8'
      00015A 54                    1467 	.db #0x54	;  84	'T'
      00015B 54                    1468 	.db #0x54	;  84	'T'
      00015C 54                    1469 	.db #0x54	;  84	'T'
      00015D 18                    1470 	.db #0x18	;  24
      00015E 08                    1471 	.db #0x08	;  8
      00015F 7E                    1472 	.db #0x7E	;  126
      000160 09                    1473 	.db #0x09	;  9
      000161 01                    1474 	.db #0x01	;  1
      000162 02                    1475 	.db #0x02	;  2
      000163 08                    1476 	.db #0x08	;  8
      000164 14                    1477 	.db #0x14	;  20
      000165 54                    1478 	.db #0x54	;  84	'T'
      000166 54                    1479 	.db #0x54	;  84	'T'
      000167 3C                    1480 	.db #0x3C	;  60
      000168 7F                    1481 	.db #0x7F	;  127
      000169 08                    1482 	.db #0x08	;  8
      00016A 04                    1483 	.db #0x04	;  4
      00016B 04                    1484 	.db #0x04	;  4
      00016C 78                    1485 	.db #0x78	;  120	'x'
      00016D 00                    1486 	.db #0x00	;  0
      00016E 44                    1487 	.db #0x44	;  68	'D'
      00016F 7D                    1488 	.db #0x7D	;  125
      000170 40                    1489 	.db #0x40	;  64
      000171 00                    1490 	.db #0x00	;  0
      000172 20                    1491 	.db #0x20	;  32
      000173 40                    1492 	.db #0x40	;  64
      000174 44                    1493 	.db #0x44	;  68	'D'
      000175 3D                    1494 	.db #0x3D	;  61
      000176 00                    1495 	.db #0x00	;  0
      000177 00                    1496 	.db #0x00	;  0
      000178 7F                    1497 	.db #0x7F	;  127
      000179 10                    1498 	.db #0x10	;  16
      00017A 28                    1499 	.db #0x28	;  40
      00017B 44                    1500 	.db #0x44	;  68	'D'
      00017C 00                    1501 	.db #0x00	;  0
      00017D 41                    1502 	.db #0x41	;  65	'A'
      00017E 7F                    1503 	.db #0x7F	;  127
      00017F 40                    1504 	.db #0x40	;  64
      000180 00                    1505 	.db #0x00	;  0
      000181 7C                    1506 	.db #0x7C	;  124
      000182 04                    1507 	.db #0x04	;  4
      000183 18                    1508 	.db #0x18	;  24
      000184 04                    1509 	.db #0x04	;  4
      000185 78                    1510 	.db #0x78	;  120	'x'
      000186 7C                    1511 	.db #0x7C	;  124
      000187 08                    1512 	.db #0x08	;  8
      000188 04                    1513 	.db #0x04	;  4
      000189 04                    1514 	.db #0x04	;  4
      00018A 78                    1515 	.db #0x78	;  120	'x'
      00018B 38                    1516 	.db #0x38	;  56	'8'
      00018C 44                    1517 	.db #0x44	;  68	'D'
      00018D 44                    1518 	.db #0x44	;  68	'D'
      00018E 44                    1519 	.db #0x44	;  68	'D'
      00018F 38                    1520 	.db #0x38	;  56	'8'
      000190 7C                    1521 	.db #0x7C	;  124
      000191 14                    1522 	.db #0x14	;  20
      000192 14                    1523 	.db #0x14	;  20
      000193 14                    1524 	.db #0x14	;  20
      000194 08                    1525 	.db #0x08	;  8
      000195 08                    1526 	.db #0x08	;  8
      000196 14                    1527 	.db #0x14	;  20
      000197 14                    1528 	.db #0x14	;  20
      000198 18                    1529 	.db #0x18	;  24
      000199 7C                    1530 	.db #0x7C	;  124
      00019A 7C                    1531 	.db #0x7C	;  124
      00019B 08                    1532 	.db #0x08	;  8
      00019C 04                    1533 	.db #0x04	;  4
      00019D 04                    1534 	.db #0x04	;  4
      00019E 08                    1535 	.db #0x08	;  8
      00019F 48                    1536 	.db #0x48	;  72	'H'
      0001A0 54                    1537 	.db #0x54	;  84	'T'
      0001A1 54                    1538 	.db #0x54	;  84	'T'
      0001A2 54                    1539 	.db #0x54	;  84	'T'
      0001A3 20                    1540 	.db #0x20	;  32
      0001A4 04                    1541 	.db #0x04	;  4
      0001A5 3F                    1542 	.db #0x3F	;  63
      0001A6 44                    1543 	.db #0x44	;  68	'D'
      0001A7 40                    1544 	.db #0x40	;  64
      0001A8 20                    1545 	.db #0x20	;  32
      0001A9 3C                    1546 	.db #0x3C	;  60
      0001AA 40                    1547 	.db #0x40	;  64
      0001AB 40                    1548 	.db #0x40	;  64
      0001AC 20                    1549 	.db #0x20	;  32
      0001AD 7C                    1550 	.db #0x7C	;  124
      0001AE 1C                    1551 	.db #0x1C	;  28
      0001AF 20                    1552 	.db #0x20	;  32
      0001B0 40                    1553 	.db #0x40	;  64
      0001B1 20                    1554 	.db #0x20	;  32
      0001B2 1C                    1555 	.db #0x1C	;  28
      0001B3 3C                    1556 	.db #0x3C	;  60
      0001B4 40                    1557 	.db #0x40	;  64
      0001B5 30                    1558 	.db #0x30	;  48	'0'
      0001B6 40                    1559 	.db #0x40	;  64
      0001B7 3C                    1560 	.db #0x3C	;  60
      0001B8 44                    1561 	.db #0x44	;  68	'D'
      0001B9 28                    1562 	.db #0x28	;  40
      0001BA 10                    1563 	.db #0x10	;  16
      0001BB 28                    1564 	.db #0x28	;  40
      0001BC 44                    1565 	.db #0x44	;  68	'D'
      0001BD 0C                    1566 	.db #0x0C	;  12
      0001BE 50                    1567 	.db #0x50	;  80	'P'
      0001BF 50                    1568 	.db #0x50	;  80	'P'
      0001C0 50                    1569 	.db #0x50	;  80	'P'
      0001C1 3C                    1570 	.db #0x3C	;  60
      0001C2 44                    1571 	.db #0x44	;  68	'D'
      0001C3 64                    1572 	.db #0x64	;  100	'd'
      0001C4 54                    1573 	.db #0x54	;  84	'T'
      0001C5 4C                    1574 	.db #0x4C	;  76	'L'
      0001C6 44                    1575 	.db #0x44	;  68	'D'
      0001C7 00                    1576 	.db #0x00	;  0
      0001C8 08                    1577 	.db #0x08	;  8
      0001C9 36                    1578 	.db #0x36	;  54	'6'
      0001CA 41                    1579 	.db #0x41	;  65	'A'
      0001CB 00                    1580 	.db #0x00	;  0
      0001CC 00                    1581 	.db #0x00	;  0
      0001CD 00                    1582 	.db #0x00	;  0
      0001CE 7F                    1583 	.db #0x7F	;  127
      0001CF 00                    1584 	.db #0x00	;  0
      0001D0 00                    1585 	.db #0x00	;  0
      0001D1 00                    1586 	.db #0x00	;  0
      0001D2 41                    1587 	.db #0x41	;  65	'A'
      0001D3 36                    1588 	.db #0x36	;  54	'6'
      0001D4 08                    1589 	.db #0x08	;  8
      0001D5 00                    1590 	.db #0x00	;  0
      0001D6 08                    1591 	.db #0x08	;  8
      0001D7 08                    1592 	.db #0x08	;  8
      0001D8 2A                    1593 	.db #0x2A	;  42
      0001D9 1C                    1594 	.db #0x1C	;  28
      0001DA 08                    1595 	.db #0x08	;  8
      0001DB 08                    1596 	.db #0x08	;  8
      0001DC 1C                    1597 	.db #0x1C	;  28
      0001DD 2A                    1598 	.db #0x2A	;  42
      0001DE 08                    1599 	.db #0x08	;  8
      0001DF 08                    1600 	.db #0x08	;  8
      0001E0                       1601 ___str_0:
      0001E0 01                    1602 	.db 0x01
      0001E1 6C 69 6E 68 61 20 31  1603 	.ascii "linha 1        >"
             20 20 20 20 20 20 20
             20 3E
      0001F1 00                    1604 	.db 0x00
      0001F2                       1605 ___str_1:
      0001F2 02                    1606 	.db 0x02
      0001F3 20 6C 69 6E 68 61 20  1607 	.ascii " linha 2       >"
             32 20 20 20 20 20 20
             20 3E
      000203 00                    1608 	.db 0x00
      000204                       1609 ___str_2:
      000204 03                    1610 	.db 0x03
      000205 20 20 6C 69 6E 68 61  1611 	.ascii "  linha 3      >"
             20 33 20 20 20 20 20
             20 3E
      000215 00                    1612 	.db 0x00
      000216                       1613 ___str_3:
      000216 04                    1614 	.db 0x04
      000217 20 20 20 6C 69 6E 68  1615 	.ascii "   linha 4     >"
             61 20 34 20 20 20 20
             20 3E
      000227 00                    1616 	.db 0x00
      000228                       1617 ___str_4:
      000228 05                    1618 	.db 0x05
      000229 20 20 20 20 6C 69 6E  1619 	.ascii "    linha 5    >"
             68 61 20 35 20 20 20
             20 3E
      000239 00                    1620 	.db 0x00
      00023A                       1621 ___str_5:
      00023A 06                    1622 	.db 0x06
      00023B 20 20 20 20 20 6C 69  1623 	.ascii "     linha 6   >"
             6E 68 61 20 36 20 20
             20 3E
      00024B 00                    1624 	.db 0x00
      00024C                       1625 ___str_6:
      00024C 07                    1626 	.db 0x07
      00024D 20 20 20 20 20 20 6C  1627 	.ascii "      linha 7  >"
             69 6E 68 61 20 37 20
             20 3E
      00025D 00                    1628 	.db 0x00
      00025E                       1629 ___str_7:
      00025E 08                    1630 	.db 0x08
      00025F 20 20 20 20 20 20 20  1631 	.ascii "       linha 8 >"
             6C 69 6E 68 61 20 38
             20 3E
      00026F 00                    1632 	.db 0x00
      000270                       1633 ___str_8:
      000270 04                    1634 	.db 0x04
      000271 76 61 72 20 3D 20 25  1635 	.ascii "var = %5.1f    >"
             35 2E 31 66 20 20 20
             20 3E
      000281 00                    1636 	.db 0x00
                                   1637 	.area XINIT   (CODE)
                                   1638 	.area CABS    (ABS,CODE)
